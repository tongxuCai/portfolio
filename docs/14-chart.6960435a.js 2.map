{"version":3,"sources":["scripts/homework5/14-chart.js"],"names":["margin","width","height","svg","d3","select","append","attr","yPositionScale","scaleLinear","domain","range","colorScale","scaleOrdinal","xPositionScale","scaleBand","csv","require","then","ready","datapoints","selectAll","data","enter","bandwidth","d","name","hamburgers","animal","yAxis","axisLeft","call","xAxis","axisBottom","catch","err","console","log"],"mappings":";;;CAAC,WACOA,IAAAA,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACjDC,EAAQ,IAAMD,EAAcA,EAC5BE,EAAS,IAAMF,EAAaA,EAE5BG,EAAMC,GACTC,OAAO,YACPC,OAAO,OACPC,KAAK,QAASN,EAAQD,EAAcA,GACpCO,KAAK,SAAUL,EAASF,EAAaA,GACrCM,OAAO,KACPC,KAAK,YAAa,aAAeP,EAAc,IAAMA,EAAa,KAE/DQ,EAAiBJ,GACpBK,cACAC,OAAO,CAAC,EAAG,KACXC,MAAM,CAAC,EAAGT,IACPU,EAAaR,GAChBS,eACAH,OAAO,CAAC,MAAO,MAAO,QACtBC,MAAM,CAAC,QAAS,SAAU,WACvBG,EAAiBV,GACpBW,YACAL,OAAO,CACN,MACA,SACA,SACA,WACA,aACA,WACA,WAEDC,MAAM,CAAC,EAAGV,IAEbG,GAAGY,IAAIC,QAAQ,+BACZC,KAKMC,SAAMC,GACbjB,EACGkB,UAAU,QACVC,KAAKF,GACLG,QACAjB,OAAO,QACPC,KAAK,QAASO,EAAeU,aAC7BjB,KAAK,IAAK,SAASkB,GACXX,OAAAA,EAAeW,EAAEC,QAEzBnB,KAAK,SAAU,SAASkB,GAChBjB,OAAAA,EAAeiB,EAAEE,cAEzBpB,KAAK,IAAK,SAASkB,GACXvB,OAAAA,EAASM,EAAeiB,EAAEE,cAElCpB,KAAK,UAAW,KAChBA,KAAK,OAAQ,SAASkB,GACdb,OAAAA,EAAWa,EAAEG,UAGlBC,IAAAA,EAAQzB,GAAG0B,SAAStB,GAC1BL,EACGG,OAAO,KACPC,KAAK,QAAS,eACdwB,KAAKF,GACFG,IAAAA,EAAQ5B,GAAG6B,WAAWnB,GAC5BX,EACGG,OAAO,KACPC,KAAK,QAAS,eACdA,KAAK,YAAa,eAAiBL,EAAS,KAC5C6B,KAAKC,KAnCPE,MAAM,SAASC,GACdC,QAAQC,IAAI,cAAeF,KArChC","file":"14-chart.6960435a.js","sourceRoot":"../src","sourcesContent":[";(function() {\n  const margin = { top: 50, right: 50, bottom: 50, left: 50 }\n  const width = 500 - margin.left - margin.right\n  const height = 400 - margin.top - margin.bottom\n\n  const svg = d3\n    .select('#chart14')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n  const yPositionScale = d3\n    .scaleLinear()\n    .domain([0, 10])\n    .range([0, height])\n  const colorScale = d3\n    .scaleOrdinal()\n    .domain(['dog', 'cat', 'cow'])\n    .range(['green', 'purple', 'orange'])\n  const xPositionScale = d3\n    .scaleBand()\n    .domain([\n      'Hio',\n      'Parlay',\n      'Jumpup',\n      'Particle',\n      'Bubbletree',\n      'Nicholas',\n      'Stevie'\n    ])\n    .range([0, width])\n\n  d3.csv(require('../../data/eating-data.csv'))\n    .then(ready)\n    .catch(function(err) {\n      console.log('Failed with', err)\n    })\n\n  function ready(datapoints) {\n    svg\n      .selectAll('rect')\n      .data(datapoints)\n      .enter()\n      .append('rect')\n      .attr('width', xPositionScale.bandwidth())\n      .attr('x', function(d) {\n        return xPositionScale(d.name)\n      })\n      .attr('height', function(d) {\n        return yPositionScale(d.hamburgers)\n      })\n      .attr('y', function(d) {\n        return height - yPositionScale(d.hamburgers)\n      })\n      .attr('opacity', 0.55)\n      .attr('fill', function(d) {\n        return colorScale(d.animal)\n      })\n\n    const yAxis = d3.axisLeft(yPositionScale)\n    svg\n      .append('g')\n      .attr('class', 'axis y-axis')\n      .call(yAxis)\n    const xAxis = d3.axisBottom(xPositionScale)\n    svg\n      .append('g')\n      .attr('class', 'axis x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n  }\n})()\n"]}