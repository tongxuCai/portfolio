{"version":3,"sources":["scripts/homework5scripts/14-chart.js"],"names":["margin","width","height","svg","d3","select","append","attr","yPositionScale","scaleLinear","domain","range","colorScale","scaleOrdinal","xPositionScale","scaleBand","csv","then","ready","datapoints","selectAll","data","enter","bandwidth","d","name","hamburgers","animal","yAxis","axisLeft","call","xAxis","axisBottom","catch","err","console","log"],"mappings":";CAAC,WACKA,IAAAA,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACjDC,EAAQ,IAAMD,EAAcA,EAC5BE,EAAS,IAAMF,EAAaA,EAE5BG,EAAMC,GACPC,OAAO,YACPC,OAAO,OACPC,KAAK,QAASN,EAAQD,EAAcA,GACpCO,KAAK,SAAUL,EAASF,EAAaA,GACrCM,OAAO,KACPC,KAAK,YAAa,aAAeP,EAAc,IAAMA,EAAa,KAEjEQ,EAAiBJ,GAClBK,cACAC,OAAO,CAAC,EAAG,KACXC,MAAM,CAAC,EAAGT,IACTU,EAAaR,GACdS,eACAH,OAAO,CAAC,MAAO,MAAO,QACtBC,MAAM,CAAC,QAAS,SAAU,WACzBG,EAAiBV,GAClBW,YACAL,OAAO,CACN,MACA,SACA,SACA,WACA,aACA,WACA,WAEDC,MAAM,CAAC,EAAGV,IAEbG,GAAGY,IAAI,mBACJC,KAKMC,SAAMC,GACbhB,EACGiB,UAAU,QACVC,KAAKF,GACLG,QACAhB,OAAO,QACPC,KAAK,QAASO,EAAeS,aAC7BhB,KAAK,IAAK,SAASiB,GACXV,OAAAA,EAAeU,EAAEC,QAEzBlB,KAAK,SAAU,SAASiB,GAChBhB,OAAAA,EAAegB,EAAEE,cAEzBnB,KAAK,IAAK,SAASiB,GACXtB,OAAAA,EAASM,EAAegB,EAAEE,cAElCnB,KAAK,UAAW,KAChBA,KAAK,OAAQ,SAASiB,GACdZ,OAAAA,EAAWY,EAAEG,UAGpBC,IAAAA,EAAQxB,GAAGyB,SAASrB,GACxBL,EACGG,OAAO,KACPC,KAAK,QAAS,eACduB,KAAKF,GACJG,IAAAA,EAAQ3B,GAAG4B,WAAWlB,GAC1BX,EACGG,OAAO,KACPC,KAAK,QAAS,eACdA,KAAK,YAAa,eAAiBL,EAAS,KAC5C4B,KAAKC,KAnCPE,MAAM,SAASC,GACdC,QAAQC,IAAI,cAAeF,KArChC","file":"14-chart.6d430b61.js","sourceRoot":"../src","sourcesContent":[";(function() {\n  var margin = { top: 50, right: 50, bottom: 50, left: 50 }\n  var width = 500 - margin.left - margin.right\n  var height = 400 - margin.top - margin.bottom\n\n  var svg = d3\n    .select('#chart14')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n  var yPositionScale = d3\n    .scaleLinear()\n    .domain([0, 10])\n    .range([0, height])\n  var colorScale = d3\n    .scaleOrdinal()\n    .domain(['dog', 'cat', 'cow'])\n    .range(['green', 'purple', 'orange'])\n  var xPositionScale = d3\n    .scaleBand()\n    .domain([\n      'Hio',\n      'Parlay',\n      'Jumpup',\n      'Particle',\n      'Bubbletree',\n      'Nicholas',\n      'Stevie'\n    ])\n    .range([0, width])\n\n  d3.csv('eating-data.csv')\n    .then(ready)\n    .catch(function(err) {\n      console.log('Failed with', err)\n    })\n\n  function ready(datapoints) {\n    svg\n      .selectAll('rect')\n      .data(datapoints)\n      .enter()\n      .append('rect')\n      .attr('width', xPositionScale.bandwidth())\n      .attr('x', function(d) {\n        return xPositionScale(d.name)\n      })\n      .attr('height', function(d) {\n        return yPositionScale(d.hamburgers)\n      })\n      .attr('y', function(d) {\n        return height - yPositionScale(d.hamburgers)\n      })\n      .attr('opacity', 0.55)\n      .attr('fill', function(d) {\n        return colorScale(d.animal)\n      })\n\n    var yAxis = d3.axisLeft(yPositionScale)\n    svg\n      .append('g')\n      .attr('class', 'axis y-axis')\n      .call(yAxis)\n    var xAxis = d3.axisBottom(xPositionScale)\n    svg\n      .append('g')\n      .attr('class', 'axis x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n  }\n})()\n"]}