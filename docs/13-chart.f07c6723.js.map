{"version":3,"sources":["scripts/homework5scripts/13-chart.js"],"names":["margin","width","height","svg","d3","select","append","attr","bandScale","scaleBand","range","widthScale","domain","paddingInner","scaleLinear","xPositionScale","colorScale","scaleOrdinal","csv","require","then","ready","datapoints","selectAll","data","enter","d","animal","hamburgers","bandwidth","name","yAxis","axisLeft","call","xAxis","axisBottom","catch","err","console","log"],"mappings":";;;CAAC,WACKA,IAAAA,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACjDC,EAAQ,IAAMD,EAAcA,EAC5BE,EAAS,IAAMF,EAAaA,EAE5BG,EAAMC,GACPC,OAAO,YACPC,OAAO,OACPC,KAAK,QAASN,EAAQD,EAAcA,GACpCO,KAAK,SAAUL,EAASF,EAAaA,GACrCM,OAAO,KACPC,KAAK,YAAa,aAAeP,EAAc,IAAMA,EAAa,KAEjEQ,EAAYJ,GAAGK,YAAYC,MAAM,CAAC,EAAG,MAcrCC,GAbAH,EAAYJ,GACbK,YACAG,OAAO,CACN,SACA,WACA,aACA,WACA,SACA,SACA,QAEDF,MAAM,CAAC,EAAG,MACVG,aAAa,KACCT,GACdU,cACAF,OAAO,CAAC,EAAG,KACXF,MAAM,CAAC,EAAG,OACTK,EAAiBX,GAClBU,cACAF,OAAO,CAAC,EAAG,KACXF,MAAM,CAAC,EAAGT,IACTe,EAAaZ,GACda,eACAL,OAAO,CAAC,MAAO,MAAO,QACtBF,MAAM,CAAC,SAAU,QAAS,WAE7BN,GAAGc,IAAIC,QAAQ,+BACZC,KAKMC,SAAMC,GACbnB,EACGoB,UAAU,QACVC,KAAKF,GACLG,QACAnB,OAAO,QACPC,KAAK,OAAQ,SAAAmB,GAAKV,OAAAA,EAAWU,EAAEC,UAC/BpB,KAAK,QAAS,SAAAmB,GAAKf,OAAAA,EAAWe,EAAEE,cAChCrB,KAAK,SAAUC,EAAUqB,aACzBtB,KAAK,IAAK,SAAAmB,GAAKlB,OAAAA,EAAUkB,EAAEI,QAC3BvB,KAAK,UAAW,KAEfwB,IAAAA,EAAQ3B,GAAG4B,SAASxB,GACxBL,EACGG,OAAO,KACPC,KAAK,QAAS,eACd0B,KAAKF,GAEJG,IAAAA,EAAQ9B,GAAG+B,WAAWpB,GAC1BZ,EACGG,OAAO,KACPC,KAAK,QAAS,eACdA,KAAK,YAAa,oBAClB0B,KAAKC,KA3BPE,MAAM,SAASC,GACdC,QAAQC,IAAI,cAAeF,KA3ChC","file":"13-chart.f07c6723.js","sourceRoot":"../src","sourcesContent":[";(function() {\n  let margin = { top: 50, right: 75, bottom: 75, left: 50 }\n  let width = 400 - margin.left - margin.right\n  let height = 500 - margin.top - margin.bottom\n\n  let svg = d3\n    .select('#chart13')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n  var bandScale = d3.scaleBand().range([0, 500])\n  var bandScale = d3\n    .scaleBand()\n    .domain([\n      'Stevie',\n      'Nicholas',\n      'Bubbletree',\n      'Particle',\n      'Jumpup',\n      'Parlay',\n      'Hio'\n    ])\n    .range([0, 350])\n    .paddingInner(0.01)\n  let widthScale = d3\n    .scaleLinear()\n    .domain([0, 10])\n    .range([0, 300])\n  let xPositionScale = d3\n    .scaleLinear()\n    .domain([0, 10])\n    .range([0, width])\n  let colorScale = d3\n    .scaleOrdinal()\n    .domain(['cat', 'dog', 'cow'])\n    .range(['orange', 'green', 'purple'])\n\n  d3.csv(require('../../data/eating-data.csv'))\n    .then(ready)\n    .catch(function(err) {\n      console.log('Failed with', err)\n    })\n\n  function ready(datapoints) {\n    svg\n      .selectAll('rect')\n      .data(datapoints)\n      .enter()\n      .append('rect')\n      .attr('fill', d => colorScale(d.animal))\n      .attr('width', d => widthScale(d.hamburgers))\n      .attr('height', bandScale.bandwidth())\n      .attr('y', d => bandScale(d.name))\n      .attr('opacity', 0.75)\n\n    let yAxis = d3.axisLeft(bandScale)\n    svg\n      .append('g')\n      .attr('class', 'axis y-axis')\n      .call(yAxis)\n\n    let xAxis = d3.axisBottom(xPositionScale)\n    svg\n      .append('g')\n      .attr('class', 'axis x-axis')\n      .attr('transform', 'translate(0,' + 350 + ')')\n      .call(xAxis)\n  }\n})()\n"]}